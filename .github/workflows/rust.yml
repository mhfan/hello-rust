
name: Rust CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  #schedule: -cron:'0 0 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    #name: Build Rust Project
    # https://github.com/actions/virtual-environments
    runs-on: ubuntu-22.04

    #strategy:
    #  matrix:
    #    toolchain:
    #      - stable
    #      - beta
    #      - nightly
    #
    #    build: [linux, macos, windows]
    #    include:
    #      - build: linux
    #        os: ubuntu-22.04
    #        target: x86_64-unknown-linux-musl
    #      - build: macos
    #        os: macos-12
    #        target: aarch64-apple-darwin
    #      - build: windows
    #        os: windows-latest
    #        target: x86_64-pc-windows-msvc
    #  fail-fast: false

    #container:
    #  image: xd009642/tarpaulin:develop-nightly
    #  options: --security-opt seccomp=unconfined

    steps:
    - uses: actions/checkout@v3

    #- run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

    - name: Run tests
      run: cargo test -- --color always --nocapture

    - name: Benchmark
      run: cargo bench

    - name: Install nightly toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly

    - name: Code coverage
      #run: |
      #  cargo install cargo-tarpulin
      #  cargo tarpaulin --all-features --workspace --timeout 120 --out Xml
      uses: actions-rs/tarpaulin@v0.1
      with:
      #  version: '0.20.1'
      #  args: '-- --test-threads 1'
        run-types: 'Tests,Doctests'

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v3

    #- name: Archive code coverage results
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: code-coverage-report
    #    path: cobertura.xml
